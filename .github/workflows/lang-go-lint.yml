# USAGE:
#   jobs:
#     go-lint:
#       needs: [go-version]
#       uses: lrstanley/.github/.github/workflows/lang-go-lint.yml@master
#       with:
#         go-version: 1.2.3 # or don't provide to use latest Go version.

name: go-lint

on:
  workflow_call:
    secrets:
      SNYK_TOKEN:
        description: "Snyk token for vulnerability scanning."
        required: false
    inputs:
      go-version:
        description: >
          Go version to use for linting -- defaults to the latest stable Go
          version.
        required: false
        type: string
      staticcheck:
        description: "Enables linting with staticcheck."
        default: True
        required: False
        type: boolean
      govet:
        description: "Enables linting with go vet."
        default: True
        required: False
        type: boolean
      codecov:
        description: >
          Enables Codecov integration (requires running tests at least once).
        default: True
        required: False
        type: boolean
      scan:
        description: >
          If code vulnerability scanning should be enabled.
        default: True
        required: False
        type: boolean

jobs:
  go-lint:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
      security-events: write
      statuses: write
    steps:
      - uses: actions/checkout@v3
      - name: git-clone-tools-repo
        uses: actions/checkout@v3
        with:
          repository: lrstanley/.github
          path: ghmeta
      - id: fetch-versions
        run: ./ghmeta/scripts/versions-go.sh ${{ inputs.go-version || 'latest' }}
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ steps.fetch-versions.outputs.version }}
      - name: codecov
        if: inputs.codecov
        run: |
          ./ghmeta/scripts/install-codecov.sh

          go test -v -coverprofile=coverage.txt -timeout 3m ./...
          codecov -f coverage.txt
      - name: govet
        if: inputs.govet
        run: go vet -composites=false ./...
      - name: staticcheck
        if: inputs.staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck -f stylish ./...
      - name: make
        run: |
          if [ -f "Makefile" ] && grep -q "^lint-go:" Makefile; then
            make lint-go
          elif [ -f "Makefile" ] && grep -q "^lint:" Makefile; then
            make lint
          fi
      - run: tree -L 3
      - name: scan-snyk
        if: ${{ inputs.scan }}
        uses: snyk/actions/golang@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: >-
            --all-projects
            --detection-depth=4
            --prune-repeated-subdependencies
            --severity-threshold=medium
            --sarif-file-output=snyk.sarif
      - name: scan-snyk-upload-sarif
        if: ${{ inputs.scan && github.event_name != 'pull_request' }}
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
