# USAGE:
#   jobs:
#     go-lint:
#       needs: [go-version]
#       uses: lrstanley/.github/.github/workflows/lang-go-lint.yml@master
#       with:
#         go-version: 1.2.3 # or don't provide to use latest Go version.

name: go-lint

on:
  workflow_call:
    inputs:
      go-version:
        description: "Go version to use for linting -- defaults to the latest stable Go version."
        required: false
        type: string
      staticcheck:
        description: "Enables linting with staticcheck."
        default: True
        required: False
        type: boolean
      govet:
        description: "Enables linting with go vet."
        default: True
        required: False
        type: boolean
      codecov:
        description: "Enables Codecov integration (requires running tests at least once)."
        default: True
        required: False
        type: boolean

# TODO: permissions
jobs:
  go-test:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: read
      pull-requests: write
      statuses: write
    steps:
      - if: ${{ !inputs.go-version }}
        id: goversion
        run: |
          VERSION=$(
              curl -sSL https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json \
                  | jq -r '[.[] | select(.stable == true)][0].version'
          )
          echo ::set-output name=version::${VERSION}
      - uses: actions/setup-go@v3
        with:
          go-version: "${{ inputs.go-version || steps.goversion.outputs.version }}"
      - uses: actions/checkout@v3
      - if: inputs.codecov
        run: |
          go test -v -coverprofile=coverage.txt -timeout 3m ./...
          bash <(curl -s https://codecov.io/bash)
      - if: inputs.govet
        run: go vet -composites=false ./...
      - if: inputs.staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          staticcheck -f stylish ./...
