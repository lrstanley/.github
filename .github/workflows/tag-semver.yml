# USAGE:
#   jobs:
#     tag-semver:
#       uses: lrstanley/.github/.github/workflows/tag-semver.yml@master
#       with: { method: "", ref: "", custom: "" }

name: tag-semver

# TODO: this requires a custom personal access token, as the default token
# doesn't allow events created by it, to trigger other workflows (e.g. release
# upon creating a new tag).

on:
  workflow_call:
    inputs:
      method: # major, minor, patch, alpha, rc, custom
        description: "Tagging method to use"
        required: true
        type: string
      custom:
        description: >
          Custom tag, if the default doesn't suffice. Must also use method
          'custom'.
        required: false
        type: string
      ref:
        description: "Git ref to apply tag to"
        required: false
        type: string
    secrets:
      token:
        description: >
          A Github Personal Access Token. Must be one generated outside of
          Actions if you want this workflow to trigger other workflows
          (standard action tokens are unable to make events that trigger
          other workflows).
        required: true

jobs:
  tag-semver:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: install-svu
        run: |
          SVU_VERSION=1.9.0
          curl -sSL "https://github.com/caarlos0/svu/releases/download/v${SVU_VERSION}/svu_${SVU_VERSION}_linux_amd64.tar.gz" \
            | tar -C /usr/local/bin/ -xzvf- svu
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
          token: ${{ secrets.token }}
      - run: git fetch --force --tags
      - name: generate-new-tag
        env:
          METHOD: ${{ inputs.method }}
          CUSTOM: ${{ inputs.custom }}
        run: |
          set -x
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          case "$METHOD" in
            major|minor|patch)
              git tag "$(svu "$METHOD")" ;;
            alpha|rc)
              svu --version
              CURRENT=$(svu current)
              if [ "$?" != 0 ];then
                echo "error: svu unable to get current tag"; exit 1
              fi

              BUILD="next.$(git rev-parse --short HEAD)"
              read -r PR_TYPE REV <<<"$(sed -rn 's:^v?[0-9]+\.[0-9]+\.[0-9]+-(alpha|rc)\.([0-9]+)(\+.*)?$:\1 \2:p' <<<"$CURRENT")"

              if [ -z "$PR_TYPE" ] || [ -z "$REV" ] || [ "$PR_TYPE" != "$METHOD" ];then
                REV=0
                PR_TYPE="$METHOD"
                METHOD="patch"
              else
                REV=$((REV + 1))
                METHOD="current"
              fi

              git tag "$(svu "$METHOD" --no-metadata)-${PR_TYPE}.${REV}+${BUILD}"
              ;;
            custom)
              git tag "$CUSTOM" ;;
            *) echo "error: unknown method"; exit 1 ;;
          esac

          git push --tags
