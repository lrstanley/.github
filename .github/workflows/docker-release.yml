name: docker-release

on:
  workflow_call:
    inputs:
      name:
        description: >
          Name used for the built image (e.g. foo would result in
          ghcr.io/user/foo).
        required: false
        type: string
      dockerfile:
        description: "Alternative dockerfile location."
        required: false
        type: string
        default: Dockerfile
      context:
        description: "Use when you want to change the docker context."
        required: false
        type: string
        default: "."
      buildoptions:
        description: >
          Use buildoptions when you want to pass build arguments (e.g.
          --build-arg, --force-rm, etc).
        required: false
        type: string

jobs:
  docker-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --force --tags
      - name: get-latest-tag
        id: get-latest-tag
        run: |
          LATEST=$(git tag --sort=-v:refname | egrep "^v?[0-9]+\.[0-9]+\.[0-9]+$" | head -1)
          echo "::set-output name=version::$LATEST"
      - name: docker-login
        uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: fetch-metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ inputs.name || github.event.repository.name }}
          flavor: |
            latest=false
          tags: |
            type=raw,priority=1000,value=latest,enable=${{ github.ref_name == steps.get-latest-tag.outputs.version || !steps.get-latest-tag.outputs.version }}
            type=semver,pattern={{version}}
            type=semver,priority=600,pattern={{major}},enable=${{ github.ref_name == steps.get-latest-tag.outputs.version || !steps.get-latest-tag.outputs.version }}
            type=semver,priority=500,pattern={{major}}.{{minor}}
            type=semver,priority=800,pattern={{major}}.{{minor}}.{{patch}}
            type=semver,priority=700,pattern={{major}}.{{minor}}.{{patch}},suffix=-{{date 'YYYYMMDD'}}-{{sha}},enable=${{ github.ref_name == steps.get-latest-tag.outputs.version || !steps.get-latest-tag.outputs.version }}
            type=ref,priority=900,event=branch
            type=ref,event=pr
          labels: |
            org.opencontainers.image.license=MIT
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.authors=${{ github.event.repository.owner.name }} <${{ github.event.repository.owner.email || 'unknown' }}>
            org.opencontainers.image.name=${{ inputs.name || github.event.repository.name }}
      - name: docker-build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ inputs.context }}
          load: true
          tags: tmp
          labels: ${{ steps.meta.outputs.labels }}
      - name: docker-tag-and-push
        run: |
          echo -e "${{ steps.meta.outputs.tags }}" | while read -r tag;do
            (
              set -x
              docker tag tmp "$tag"
              docker push "$tag"
            )
          done
