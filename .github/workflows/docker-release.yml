name: docker-release

on:
  workflow_call:
    inputs:
      name:
        description: >
          Name used for the built image (e.g. foo would result in
          ghcr.io/user/foo).
        required: false
        type: string
      dockerfile:
        description: "Alternative dockerfile location."
        required: false
        type: string
        default: Dockerfile
      context:
        description: "Use when you want to change the docker context."
        required: false
        type: string
        default: "."
      buildoptions:
        description: >
          Use buildoptions when you want to pass build arguments (e.g.
          --build-arg, --force-rm, etc).
        required: false
        type: string

jobs:
  docker-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - run: git fetch --force --tags
      - name: git-clone-tools-repo
        uses: actions/checkout@v3
        with:
          repository: lrstanley/.github
          path: ghmeta
      # - id: generate-tags
      #   run: ./ghmeta/scripts/generate-docker-tags.sh
      #   env:
      #     GIT_SHA: ${{ github.sha }}
      #     GIT_REF: ${{ github.ref }}
      #     GIT_REF_NAME: ${{ github.ref_name }}
      #     GIT_REF_TYPE: ${{ github.ref_type }}
      #     EVENT_NAME: ${{ github.event_name }}
      #     PR_ID: ${{ github.event.pull_request.number }}
      # - name: build-and-push
      #   uses: lrstanley/Publish-Docker-Github-Action@patch/quoted-buildoptions
      #   with:
      #     name: ${{ github.repository_owner }}/${{ inputs.name || github.event.repository.name }}
      #     tags: ${{ steps.generate-tags.outputs.tags }}
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #     dockerfile: ${{ inputs.dockerfile }}
      #     workdir: ${{ inputs.workdir }}
      #     context: ${{ inputs.context }}
      - name: docker-login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: fetch-metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ inputs.name || github.event.repository.name }}
      - name: docker-build
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ${{ inputs.context }}
          load: true
          tags: tmp
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - run: |
          echo -e "tags: ${{ steps.meta.outputs.tags }}""
          echo -e "labels: ${{ steps.meta.outputs.labels }}"
          docker image list

# labels: |
#   "--label=org.opencontainers.image.title=${{ github.repository_owner }}/${{ inputs.name || github.event.repository.name }}"
#   "--label=org.opencontainers.image.name=${{ inputs.name || github.event.repository.name }}"
#   "--label=org.opencontainers.image.description=${{ github.event.repository.description || 'n/a' }}"
#   "--label=org.opencontainers.image.created=${{ github.event.head_commit.timestamp || 'unknown' }}"
#   "--label=org.opencontainers.image.authors=${{ github.event.repository.owner.name }} <${{ github.event.repository.owner.email || 'unknown' }}>"
#   "--label=org.opencontainers.image.license=MIT"
#   "--label=org.opencontainers.image.revision=${{ github.event.head_commit.id || 'unknown' }}"
#   "--label=org.opencontainers.image.version=${{ steps.generate-tags.outputs.version || 'unknown' }}"
#   "--label=org.opencontainers.image.source=${{ github.event.repository.url || 'unknown' }}" ${{ inputs.buildoptions }}
