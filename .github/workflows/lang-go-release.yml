# USAGE:
#   jobs:
#     go-release:
#       needs: [go-version]
#       uses: lrstanley/.github/.github/workflows/lang-go-release.yml@master
#       with:
#         go-version: 1.2.3 # or don't provide to use latest Go version.

name: go-release

# TODO: add explicit disable for publishing

on:
  workflow_call:
    inputs:
      go-version:
        description: >
          Go version to use for linting -- defaults to the latest stable Go
          version.
        required: false
        type: string
      node-version:
        description: >
          Node version (e.g. to build frontends).
        required: false
        type: string
      has-ghcr:
        description: "If GHCR packages exist for this project."
        required: false
        type: boolean
        default: false
      image-name:
        description: >
          If 'has-ghcr' is enabled, this will be the image name referenced.
        required: false
        type: string
      archives:
        description: >
          If archives, rather than just direct binaries, should be used.
        required: false
        type: boolean
        default: false
      draft:
        description: >
          If the release (if publishing) should be marked as a draft.
        required: false
        type: boolean
        default: false
      upload-artifacts:
        description: >
          If artifacts should be uploaded via GH Actions artifacts (for
          snapshot only).
        required: false
        type: boolean
        default: true

jobs:
  go-release:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      discussions: write
      issues: write
      packages: write
      security-events: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - name: git-clone-tools-repo
        uses: actions/checkout@v4
        with:
          repository: lrstanley/.github
          path: ghmeta
      - uses: lrstanley/.github/composite/go-versions@master
        id: goversion
        if: ${{ !inputs.go-version }}
        with:
          version: ${{ inputs.go-version || 'latest' }}
      - uses: lrstanley/.github/composite/setup-go@master
        with:
          version: ${{ inputs.go-version || steps.goversion.outputs.version }}
      - name: install-node
        if: inputs.node-version
        uses: actions/setup-node@v5
        with:
          node-version: ${{ inputs.node-version }}
      - name: check if pnpm is used
        id: uses-pnpm
        run: echo "uses-pnpm=$(find . -mindepth 1 -maxdepth 6 -type f -name pnpm-lock.yaml | grep -q . && echo true || echo false)" >> "$GITHUB_OUTPUT"
      - name: pnpm install
        if: steps.uses-pnpm.outputs.uses-pnpm == 'true'
        uses: pnpm/action-setup@v4.1.0
        id: pnpm-install
        with:
          version: latest
          run_install: false
      - run: ./ghmeta/goreleaser/run.sh
        env:
          INPUT_HAS_GHCR: ${{ inputs.has-ghcr }}
          INPUT_IMAGE_NAME: ${{ github.repository_owner }}/${{ inputs.image-name || github.event.repository.name }}
          INPUT_ARCHIVES: ${{ inputs.archives }}
          INPUT_DRAFT: ${{ inputs.draft }}
          INPUT_PR_ID: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch || 'master' }}
      - name: upload-snapshot-binaries
        if: ${{ inputs.upload-artifacts && github.ref_type != 'tag' }}
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-binaries
          retention-days: 14
          path: dist/**
