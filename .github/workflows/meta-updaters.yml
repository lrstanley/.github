name: updater

on:
  schedule:
    - cron: "0 12 * * 5" # every Friday at noon
  workflow_dispatch: {}

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: release
        uses: ./composite/get-release-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: goreleaser/goreleaser
      - id: version
        run: |
          echo "previous_version=$(sed -rn 's:VERSION_GOREL="([^"]+)":\1:p' goreleaser/run.sh)" >> "$GITHUB_OUTPUT"
          sed -ri 's:VERSION_GOREL="[^"]+":VERSION_GOREL="'${{ steps.release.outputs.version }}'":g' goreleaser/run.sh
      - uses: ./composite/pr-version-updater
        with:
          token: ${{ secrets.USER_PAT }}
          tool: goreleaser
          chore: deps
          version: ${{ steps.release.outputs.version }}
          previous_version: ${{ steps.version.outputs.previous_version }}
          paths: goreleaser/run.sh
          repo: ${{ steps.release.outputs.repo }}
  p2:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: release
        uses: ./composite/get-release-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: wrouesnel/p2cli
      - id: version
        run: |
          echo "previous_version=$(sed -rn 's:P2_VERSION="([^"]+)":\1:p' readme/run.sh)" >> "$GITHUB_OUTPUT"
          sed -ri 's:P2_VERSION="[^"]+":P2_VERSION="'${{ steps.release.outputs.version }}'":g' readme/run.sh
      - uses: ./composite/pr-version-updater
        with:
          token: ${{ secrets.USER_PAT }}
          tool: p2
          chore: deps
          version: ${{ steps.release.outputs.version }}
          previous_version: ${{ steps.version.outputs.previous_version }}
          paths: readme/run.sh
          repo: ${{ steps.release.outputs.repo }}
  svu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: release
        uses: ./composite/get-release-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: caarlos0/svu
      - id: version
        run: |
          echo "previous_version=$(sed -rn 's:SVU_VERSION="([^"]+)":\1:p' scripts/install-svu.sh)" >> "$GITHUB_OUTPUT"
          sed -ri 's:SVU_VERSION="[^"]+":SVU_VERSION="'${{ steps.release.outputs.version }}'":g' scripts/install-svu.sh
      - uses: ./composite/pr-version-updater
        with:
          token: ${{ secrets.USER_PAT }}
          tool: svu
          chore: deps
          version: ${{ steps.release.outputs.version }}
          previous_version: ${{ steps.version.outputs.previous_version }}
          paths: scripts/install-svu.sh
          repo: ${{ steps.release.outputs.repo }}
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: release
        uses: ./composite/get-release-version
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: golangci/golangci-lint
      - id: version
        run: |
          echo "previous_version=$(sed -rn 's:GCI_VERSION="([^"]+)":\1:p' scripts/install-golangci-lint.sh)" >> "$GITHUB_OUTPUT"
          sed -ri 's:GCI_VERSION="[^"]+":GCI_VERSION="'${{ steps.release.outputs.version }}'":g' scripts/install-golangci-lint.sh
      - uses: ./composite/pr-version-updater
        with:
          token: ${{ secrets.USER_PAT }}
          tool: golangci-lint
          chore: deps
          version: ${{ steps.release.outputs.version }}
          previous_version: ${{ steps.version.outputs.previous_version }}
          paths: scripts/install-golangci-lint.sh
          repo: ${{ steps.release.outputs.repo }}
